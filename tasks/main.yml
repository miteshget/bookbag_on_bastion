---
- name: Install podman runtime packages
  yum:
    name: podman-2.2.1-7*
    state: installed

- name: Install python library podman-compose for orchestration
  pip:
    name: podman-compose==0.1.5
    state: present

- name: Set bookbag_on_bastion variable
  set_fact:
    __bookbag_pod: "{{ bookbag_on_bastion_pods.0 }}"
    __bookbag_pod_username: "{{ bookbag_on_bastion_pod_username }}"
    __bookbag_pod_password: "{{ bookbag_on_bastion_pod_password }}"

- name: Find workshop-vars
  vars:
    workshop_vars_file:
      - bookbag-workshop-vars.yml.j2
      - sample-workshop-vars.yml.j2
  set_fact:
    __bookbag_pod_workshop_vars: "{{ lookup('first_found', workshop_vars_file) }}"

- name: Create podman orchestration directory
  file:
    path: "/opt/podman/{{ __bookbag_pod.name }}-pod/"
    state: directory
    owner: root
    group: root
    recurse: true
    mode: "u=rwx,g=rwx,o=rwx"

- name: Create volume directory
  file:
    path: "/opt/podman/{{ __bookbag_pod.name }}-pod/volumes/"
    state: directory
    owner: 1001
    group: root
    recurse: true
    mode: "u=rwx,g=rwx,o=rx"

- name: Clone git repo
  git:
    repo: "{{ bookbag_on_bastion_git_repo }}"
    version: "{{ bookbag_on_bastion_git_version }}"
    dest: /opt/podman/{{ __bookbag_pod.name }}-pod/volumes/
    force: yes

- name: Create .ssh directory
  file:
    path: "/opt/podman/{{ __bookbag_pod.name }}-pod/volumes/.ssh"
    state: directory
    owner: 1001
    group: 1001
    recurse: true
    mode: "0700"

- name: copy private key
  copy:
    src: "/root/.ssh/{{ guid }}key.pem"
    dest: "/opt/podman/{{ __bookbag_pod.name }}-pod/volumes/.ssh/id_rsa"
    remote_src: true
    owner: 1001
    group: 1001
    mode: "0400"

- name: Copy workshop-vars file in orchestration dir
  copy:
    content: "{{ lookup('template',__bookbag_pod_workshop_vars) | from_yaml | to_nice_json }}"
    dest: "/opt/podman/{{ __bookbag_pod.name }}-pod/workshop-vars.json"
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"

- name: Copy podman-compose file in orchestration dir
  template:
    src: "podman-compose.yml.j2"
    dest: "/opt/podman/{{ __bookbag_pod.name }}-pod/podman-compose.yml"
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"

- name: Copy podman systemd service config
  template:
    src: "service.j2"
    dest: "/usr/lib/systemd/system/{{ __bookbag_pod.name }}-pod.service"
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"

- name: Reload systemd daemon
  command: /usr/bin/systemctl daemon-reload
  
- name: Enable and Start pods
  service:
    name: "{{ __bookbag_pod.name }}-pod"
    enabled: "{{ item.systemd.enabled | default(true) }}"
    state: "{{ item.systemd.state | default('started') }}"
  async: 3000
  poll: 30
